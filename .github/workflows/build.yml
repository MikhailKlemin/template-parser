name: Go Build

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64]

    steps:
      # 1. Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Setup Go
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.25

        # 3. Cache Go
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # 4. Run tests
      - name: Run unit tests
        run: |
          go test ./... -v

      # 5. Build executable
      - name: Build
        run: |
          mkdir -p build
          if [ "${{ matrix.goos }}" == "windows" ]; then
            go build -o build/template-parser-${{ matrix.goos }}-${{ matrix.goarch }}.exe ./cmd/template-parser
          else
            go build -o build/template-parser-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/template-parser
          fi

      # 6. Upload artifacts
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: template-parser-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/*
